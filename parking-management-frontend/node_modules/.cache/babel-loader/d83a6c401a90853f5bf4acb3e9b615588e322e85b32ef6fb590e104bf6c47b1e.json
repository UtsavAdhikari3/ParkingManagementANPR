{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utsav\\\\Desktop\\\\src\\\\anpr_parking_main\\\\parking-management-frontend\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { logVehicleEntry } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage('Please select an image to upload.');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('image', file); // Append the selected image file\n\n      const response = await logVehicleEntry(formData); // Call API\n      setMessage(`Entry Success! License Plate: ${response.licensePlate}, Slot: ${response.slotNumber}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error logging entry:', err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error processing image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Vehicle Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"yUNOnQxWjnYufcbQnTW1CT0xGVo=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","logVehicleEntry","jsxDEV","_jsxDEV","UploadImage","_s","file","setFile","message","setMessage","handleUpload","formData","FormData","append","response","licensePlate","slotNumber","err","_err$response","_err$response$data","console","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utsav/Desktop/src/anpr_parking_main/parking-management-frontend/src/components/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { logVehicleEntry } from '../services/apiService';\r\n\r\nconst UploadImage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setMessage('Please select an image to upload.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', file); // Append the selected image file\r\n\r\n      const response = await logVehicleEntry(formData); // Call API\r\n      setMessage(\r\n        `Entry Success! License Plate: ${response.licensePlate}, Slot: ${response.slotNumber}`\r\n      );\r\n    } catch (err) {\r\n      console.error('Error logging entry:', err);\r\n      setMessage(err.response?.data?.message || 'Error processing image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Vehicle Image</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACJ,IAAI,EAAE;MACTG,UAAU,CAAC,mCAAmC,CAAC;MAC/C;IACF;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,IAAI,CAAC,CAAC,CAAC;;MAEhC,MAAMQ,QAAQ,GAAG,MAAMb,eAAe,CAACU,QAAQ,CAAC,CAAC,CAAC;MAClDF,UAAU,CACR,iCAAiCK,QAAQ,CAACC,YAAY,WAAWD,QAAQ,CAACE,UAAU,EACtF,CAAC;IACH,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEJ,GAAG,CAAC;MAC1CR,UAAU,CAAC,EAAAS,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBX,OAAO,KAAI,wBAAwB,CAAC;IACrE;EACF,CAAC;EAED,oBACEL,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClExB,OAAA;MAAQ8B,OAAO,EAAEvB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CnB,OAAO,iBAAIL,OAAA;MAAAoB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCID,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}