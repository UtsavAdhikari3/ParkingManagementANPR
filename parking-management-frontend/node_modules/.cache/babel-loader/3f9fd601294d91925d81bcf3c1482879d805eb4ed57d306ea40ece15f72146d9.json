{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utsav\\\\Desktop\\\\src\\\\anpr_parking_main\\\\parking-management-frontend\\\\src\\\\components\\\\UploadImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { logVehicleEntry } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [file, setFile] = useState(null); // State for the selected file\n  const [message, setMessage] = useState(''); // State for the success/error message\n\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('image', file); // Append the selected file to the form data\n\n      const response = await logVehicleEntry(formData); // Call the API\n      setMessage(response.message || 'Vehicle entry logged successfully');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Upload error:', err); // Debugging\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error processing image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Vehicle Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \", message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"yUNOnQxWjnYufcbQnTW1CT0xGVo=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","logVehicleEntry","jsxDEV","_jsxDEV","UploadImage","_s","file","setFile","message","setMessage","handleUpload","formData","FormData","append","response","err","_err$response","_err$response$data","console","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utsav/Desktop/src/anpr_parking_main/parking-management-frontend/src/components/UploadImage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { logVehicleEntry } from '../services/apiService';\r\n\r\nconst UploadImage = () => {\r\n  const [file, setFile] = useState(null); // State for the selected file\r\n  const [message, setMessage] = useState(''); // State for the success/error message\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', file); // Append the selected file to the form data\r\n\r\n      const response = await logVehicleEntry(formData); // Call the API\r\n      setMessage(response.message || 'Vehicle entry logged successfully');\r\n    } catch (err) {\r\n      console.error('Upload error:', err); // Debugging\r\n      setMessage(err.response?.data?.message || 'Error processing image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Vehicle Image</h2>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} /> {/* File selection */}\r\n      <button onClick={handleUpload}>Upload</button> {/* Upload button */}\r\n      {message && <p>{message}</p>} {/* Display message if it exists */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,IAAI,CAAC,CAAC,CAAC;;MAEhC,MAAMQ,QAAQ,GAAG,MAAMb,eAAe,CAACU,QAAQ,CAAC,CAAC,CAAC;MAClDF,UAAU,CAACK,QAAQ,CAACN,OAAO,IAAI,mCAAmC,CAAC;IACrE,CAAC,CAAC,OAAOO,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEJ,GAAG,CAAC,CAAC,CAAC;MACrCN,UAAU,CAAC,EAAAO,aAAA,GAAAD,GAAG,CAACD,QAAQ,cAAAE,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcI,IAAI,cAAAH,kBAAA,uBAAlBA,kBAAA,CAAoBT,OAAO,KAAI,wBAAwB,CAAC;IACrE;EACF,CAAC;EAED,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACnEtB,OAAA;MAAQ4B,OAAO,EAAErB,YAAa;MAAAW,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAC9CjB,OAAO,iBAAIL,OAAA;MAAAkB,QAAA,EAAIb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzBID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}